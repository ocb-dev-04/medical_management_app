services:
  postgres:
    image: postgres:latest
    container_name: postgres_prod
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: admin1234
      POSTGRES_DB: medical_management
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      prod_network:
        ipv4_address: 172.20.0.2

  mongo:
    image: mongo:latest
    container_name: mongo_prod
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: admin1234
    networks:
      prod_network:
        ipv4_address: 172.20.0.3

  redis:
    image: redis:latest
    container_name: redis_prod
    environment:
      REDIS_PASSWORD: admin1234
    networks:
      prod_network:
        ipv4_address: 172.20.0.4

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq_prod
    environment:
      RABBITMQ_DEFAULT_USER: root
      RABBITMQ_DEFAULT_PASS: admin1234
    networks:
      prod_network:
        ipv4_address: 172.20.0.5

  consul:
    image: hashicorp/consul:latest
    container_name: consul_prod
    environment:
      CONSUL_HTTP_TOKEN: noijknsdafjwj980flksnfnIUP098jhekrpwoerrwer==
    networks:
      prod_network:
        ipv4_address: 172.20.0.6

  otel-collector:
    image: otel/opentelemetry-collector:0.95.0
    container_name: otel_collector
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./config/otel-collector-config.yml:/etc/otel-collector-config.yml
    ports:
      - "8888:8888" 
      - "8889:8889" 
      - "13133:13133"
      - "4317:4317"
    networks:
      prod_network:
        ipv4_address: 172.20.0.7
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: 40M

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    restart: unless-stopped
    networks:
      prod_network:
        ipv4_address: 172.20.0.8
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: 40M

  node_exporter:
    image: quay.io/prometheus/node-exporter:v1.5.0
    container_name: node_exporter
    command: '--path.rootfs=/host'
    pid: host
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      prod_network:
        ipv4_address: 172.20.0.9
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: 40M

networks:
  prod_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/24

volumes:
  postgres_data:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local