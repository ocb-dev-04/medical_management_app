services:
  postgres:
    image: postgres:latest
    container_name: postgres_dev
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: admin1234
      POSTGRES_DB: medical_management
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dev_network

  mongo:
    image: mongo:latest
    container_name: mongo_dev
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: admin1234
    networks:
      - dev_network

  redis:
    image: redis:latest
    container_name: redis_dev
    ports:
      - "6379:6379"
    environment:
      REDIS_PASSWORD: admin1234
    networks:
      - dev_network
    
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq_dev
    ports:
      - "15672:15672" # Web UI
      - "5672:5672"   # RabbitMQ port
    environment:
      RABBITMQ_DEFAULT_USER: root
      RABBITMQ_DEFAULT_PASS: admin1234
    networks:
      - dev_network

  consul:
    image: hashicorp/consul:latest
    container_name: consul_dev
    ports:
      - "8500:8500" # Consul UI
    environment:
      CONSUL_HTTP_TOKEN: "noijknsdafjwj980flksnfnIUP098jhekrpwoerrwer=="
    networks:
      - dev_network

  otel-collector:
    image: otel/opentelemetry-collector:0.95.0
    container_name: otel-collector
    ports:
      - "8888:8888" 
      - "8889:8889" 
      - "13133:13133"
      - "4317:4317"
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./config/otel-collector-config.yml:/etc/otel-collector-config.yml
    networks:
      - dev_network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    restart: unless-stopped
    networks:
      - dev_network

  node_exporter:
    image: quay.io/prometheus/node-exporter:v1.5.0
    container_name: node_exporter
    command: '--path.rootfs=/host'
    pid: host
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - dev_network

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana_dev
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin1234
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - dev_network

  elasticsearch:
    image: elasticsearch:8.17.0
    container_name: els
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=admin1234
    networks:
      - dev_network

networks:
  dev_network:
    driver: bridge

volumes:
  postgres_data:
  prometheus-data:
    driver: local
  elasticsearch-data:
